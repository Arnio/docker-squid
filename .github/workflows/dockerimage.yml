name: Docker Image CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
    
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  
  # Run tests for any PRs.
  pull_request:
  
jobs:
  test: 
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    
    - name: Build squid image
      run: docker build . --file Dockerfile --tag b4tman/squid
    
    - name: Test image
      run: docker-compose -f docker-compose.test.yml up sut
    
    - name: Build 'ssl-bump' image
      run: docker build ssl-bump --tag b4tman/squid:ssl-bump
  
  push:
    needs: test
    runs-on: ubuntu-18.04
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    
    - name: Build squid image
      run: docker build . --file Dockerfile --tag b4tman/squid
    
    - name: Build 'ssl-bump' image
      run: docker build ssl-bump --tag b4tman/squid:ssl-bump
    
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_PKGS_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    
    - name: Push squid image
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/squid
      
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
      
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
      
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
      
        docker tag b4tman/squid $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
    
    - name: Push 'ssl-bump' image
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/ssl-bump
      
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
      
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
      
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
      
        docker tag b4tman/squid:ssl-bump $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
